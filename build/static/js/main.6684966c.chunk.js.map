{"version":3,"sources":["components/Menu.js","components/Header.js","components/Project.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","className","href","target","rel","role","fill","viewBox","xmlns","data-darkreader-inline-fill","d","Header","config","name","contact","Project","data","description","url","language","App","bio","tags","projects","map","tag","i","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"i2EAwDeA,MAvDf,SAAcC,GAEV,OACQ,yBAAKC,UAAU,QACX,uBAAGC,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAC/D,yBACAH,UAAU,WACVI,KAAK,MACLC,KAAK,UACLC,QAAQ,YACRC,MAAM,6BACNC,8BAA4B,IAE5B,0BACIC,EAAE,+sBAIV,uBACIR,KAAK,wDACLC,OAAO,SACPC,IAAI,uBAEJ,yBACAH,UAAU,WACVO,MAAM,6BACND,QAAQ,eAER,2BACI,0BAAMG,EAAE,+BACR,0BACAA,EAAE,2VAKV,uBAAGR,KAAK,cACJC,OAAO,SACPC,IAAI,uBACJ,yBACAH,UAAU,WACVO,MAAM,6BACND,QAAQ,YACRD,KAAK,QACLG,8BAA4B,IAE5B,0BACIC,EAAE,mhDCjCXC,MAZf,SAAgBX,GAAQ,IAAD,EAEQA,EAAMY,OAAzBC,EAFW,EAEXA,KAAMC,EAFK,EAELA,QACd,OACI,yBAAKb,UAAU,UACX,wBAAIA,UAAU,QAASY,GACvB,wBAAIZ,UAAU,WAAWa,GACzB,kBAAC,EAAD,QCIGC,MAZf,SAAiBf,GAAQ,IAAD,EAE0BA,EAAMgB,KAA5CH,EAFY,EAEZA,KAAMI,EAFM,EAENA,YAAaC,EAFP,EAEOA,IAAKC,EAFZ,EAEYA,SAChC,OACI,yBAAKlB,UAAU,WACX,yBAAKA,UAAU,eAAgBkB,GAC/B,yBAAKlB,UAAU,eAAc,uBAAGC,KAAOgB,GAAQL,IAC/C,yBAAKZ,UAAU,sBAAuBgB,K,eC0BnCG,MA3Bf,WAAgB,IACNC,EAAwBT,EAAxBS,IAAKC,EAAmBV,EAAnBU,KAAMC,EAAaX,EAAbW,SAEnB,OACI,yBAAKtB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAQW,OAAQA,IAChB,yBAAKX,UAAU,OAAOoB,GACtB,yBAAKpB,UAAU,gBAEXqB,EAAKE,KAAI,SAACC,EAAKC,GACb,OAAQ,yBAAKzB,UAAU,MAAM0B,IAAMD,GAAKD,OAI9C,wCAEIF,EAASC,KAAI,SAACd,EAAGgB,GACf,OAAQ,kBAAC,EAAD,CAASV,KAAMN,EAAGiB,IAAMD,UCd5BE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6684966c.chunk.js","sourcesContent":["import React from 'react';\nfunction Menu(props) {\n\n    return (\n            <div className=\"Menu\">\n                <a href=\"https://www.github.com/prestonjcrowe\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <svg\n                    className=\"MenuIcon\"\n                    role=\"img\"\n                    fill=\"#ffffff\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    data-darkreader-inline-fill=\"\"\n                    >\n                    <path\n                        d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n                    ></path>\n                    </svg>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/please-give-me-your-data/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <svg\n                    className=\"MenuIcon\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 455 455\"\n                    >\n                    <g>\n                        <path d=\"M246.4 204.3v-.6l-.4.7h.4z\" />\n                        <path\n                        d=\"M0 0v455h455V0H0zm141.5 378H74V175h67.5v203zm-33.7-230.8h-.5C84.7 147.2 70 131.6 70 112 70 92 85.1 77 108.2 77s37.3 15.2 37.8 35c0 19.6-14.7 35.2-38.2 35.2zM385 378h-67.5V269.3c0-27.2-9.8-45.9-34.2-45.9-18.7 0-29.8 12.6-34.7 24.7a46.3 46.3 0 0 0-2.2 16.5V378h-67.5s.9-184 0-203h67.5v28.7a67 67 0 0 1 60.9-33.6c44.4 0 77.7 29 77.7 91.4V378z\"\n                        />\n                    </g>\n                    </svg>\n                </a>\n                <a href=\"/resume.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <svg\n                    className=\"MenuIcon\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 50 50\"\n                    fill=\"#fff \"\n                    data-darkreader-inline-fill=\"\"\n                    >\n                    <path\n                        d=\"M 3 2 L 3 43 L 7 43 L 7 47 L 29.226562 47 L 29.226562 45 L 9 45 L 9 8 L 37 8 L 37 29 L 39 29 L 39 6 L 35 6 L 35 2 L 3 2 z M 5 4 L 33 4 L 33 6 L 7 6 L 7 41 L 5 41 L 5 4 z M 15.408203 10 C 13.228203 10.04 13.045703 11.730375 13.470703 13.359375 C 13.470703 13.359375 13.241906 13.588109 13.253906 13.912109 C 13.275906 14.524109 13.683594 14.71875 13.683594 14.71875 C 13.761594 15.28775 14.263359 15.797578 14.443359 15.892578 C 14.443359 16.255578 14.479359 16.532688 14.443359 16.929688 C 14.012359 18.088687 11.134 17.763 11 20 L 19.888672 20 C 19.754672 17.763 16.875359 18.089687 16.443359 16.929688 C 16.407359 16.532688 16.443359 16.255578 16.443359 15.892578 C 16.691359 15.773578 17.099641 15.29675 17.181641 14.71875 C 17.181641 14.71875 17.609375 14.447141 17.609375 13.994141 C 17.609375 13.678141 17.504922 13.443422 17.419922 13.357422 C 17.649922 12.665422 18.044344 10.550781 16.527344 10.550781 C 16.364344 10.263781 15.953203 10 15.408203 10 z M 26 12 A 1.0001 1.0001 0 1 0 26 14 L 34 14 A 1.0001 1.0001 0 1 0 34 12 L 26 12 z M 26 17 A 1.0001 1.0001 0 1 0 26 19 L 34 19 A 1.0001 1.0001 0 1 0 34 17 L 26 17 z M 12 27 A 1.0001 1.0001 0 1 0 12 29 L 26 29 A 1.0001 1.0001 0 1 0 26 27 L 12 27 z M 31 31 L 31 32 L 31 48 L 46 48 L 46 31 L 31 31 z M 12 33 A 1.0001 1.0001 0 1 0 12 35 L 23 35 A 1.0001 1.0001 0 1 0 23 33 L 12 33 z M 33 33 L 44 33 L 44 36 L 33 36 L 33 33 z M 33 38 L 44 38 L 44 41 L 33 41 L 33 38 z M 12 39 A 1.0001 1.0001 0 1 0 12 41 L 26 41 A 1.0001 1.0001 0 1 0 26 39 L 12 39 z M 33 43 L 44 43 L 44 46 L 33 46 L 33 43 z\"\n                    ></path>\n                    </svg>\n                </a>\n            </div>\n    );\n}\n\nexport default Menu;","import React from 'react';\nimport Menu from './Menu.js';\n\nfunction Header(props) {\n\n    const { name, contact  } = props.config;\n    return (\n        <div className=\"Header\">\n            <h2 className=\"Name\">{ name }</h2>\n            <h4 className=\"Contact\">{contact }</h4>\n            <Menu/>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Project(props) {\n\n    const { name, description, url, language  } = props.data;\n    return (\n        <div className=\"Project\">\n            <div className=\"ProjectLang\">{ language }</div>\n            <div className=\"ProjectName\"><a href={ url }>{ name }</a></div>\n            <div className=\"ProjectDescription\">{ description }</div>\n        </div>\n    );\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport Header from './components/Header.js';\nimport Project from './components/Project.js';\nimport './App.scss';\n\n// Import Config \nimport config from './config.json';\n\nfunction App() {\n  const { bio, tags, projects } = config;\n\n  return (\n      <div className=\"App\">\n        <div className=\"Container\">\n          <Header config={config}/>\n          <div className=\"Bio\">{bio}</div>\n          <div className=\"TagContainer\">\n            {\n              tags.map((tag, i) => {\n                return (<div className=\"Tag\" key ={i}>{ tag }</div>);\n              })\n            }\n          </div>\n          <h3>Projects</h3>\n          {\n              projects.map((d, i) => {\n                return (<Project data={d} key ={i}/>);\n              })\n            }\n        </div>\n      </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}